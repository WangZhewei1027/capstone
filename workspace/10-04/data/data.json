[
  {
    "id": "42cc69d0-a100-11f0-9264-4313b84f379e",
    "model": "gpt-4o-mini",
    "timestamp": "2025-10-04T08:58:14.126Z",
    "question": "bubble sort",
    "answer": {
      "role": "assistant",
      "content": "```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Bubble Sort Visualization</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            text-align: center;\n            background-color: #f4f4f4;\n        }\n        #array-container {\n            display: flex;\n            justify-content: center;\n            margin-top: 20px;\n        }\n        .bar {\n            width: 20px;\n            margin: 0 2px;\n            background-color: #3498db;\n            display: inline-block;\n        }\n    </style>\n</head>\n<body>\n    <h1>Bubble Sort Visualization</h1>\n    <button onclick=\"startSort()\">Start Bubble Sort</button>\n    <div id=\"array-container\"></div>\n\n    <script>\n        let array = [5, 3, 8, 1, 2, 7];\n        const container = document.getElementById('array-container');\n\n        function renderArray() {\n            container.innerHTML = '';\n            array.forEach(value => {\n                const bar = document.createElement('div');\n                bar.className = 'bar';\n                bar.style.height = `${value * 30}px`;\n                container.appendChild(bar);\n            });\n        }\n\n        async function bubbleSort() {\n            const len = array.length;\n            for (let i = 0; i < len; i++) {\n                for (let j = 0; j < len - i - 1; j++) {\n                    if (array[j] > array[j + 1]) {\n                        // Swap\n                        [array[j], array[j + 1]] = [array[j + 1], array[j]];\n                        renderArray();\n                        await new Promise(resolve => setTimeout(resolve, 500));\n                    }\n                }\n            }\n        }\n\n        function startSort() {\n            bubbleSort();\n        }\n\n        // Initial Render\n        renderArray();\n    </script>\n</body>\n</html>\n```",
      "refusal": null,
      "annotations": []
    },
    "messages": [
      {
        "role": "system",
        "content": "Generate a single HTML file with JavaScript demonstrating the user-given concept. Only respond in a single HTML file."
      },
      {
        "role": "user",
        "content": "bubble sort"
      }
    ],
    "evaluation": {
      "score": null,
      "notes": ""
    },
    "tags": [
      "test"
    ]
  },
  {
    "id": "65765090-a100-11f0-97ee-c3f55dc09386",
    "model": "gpt-4o-mini",
    "timestamp": "2025-10-04T08:59:12.281Z",
    "question": "bubble sort",
    "answer": {
      "role": "assistant",
      "content": "```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Bubble Sort Visualization</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            background-color: #f4f4f4;\n        }\n        #array {\n            display: flex;\n            margin: 20px 0;\n        }\n        .bar {\n            width: 30px;\n            margin: 0 2px;\n            background-color: #4CAF50;\n            transition: height 0.2s;\n        }\n        #controls {\n            margin: 20px;\n        }\n    </style>\n</head>\n<body>\n\n    <h1>Bubble Sort Visualization</h1>\n    <div id=\"array\"></div>\n    <div id=\"controls\">\n        <input type=\"text\" id=\"inputArray\" placeholder=\"Enter numbers separated by commas\" />\n        <button onclick=\"startBubbleSort()\">Sort</button>\n    </div>\n\n    <script>\n        function createArray(arr) {\n            const container = document.getElementById('array');\n            container.innerHTML = '';\n            arr.forEach(num => {\n                const bar = document.createElement('div');\n                bar.className = 'bar';\n                bar.style.height = num * 5 + 'px';  // Scale for visualization\n                container.appendChild(bar);\n            });\n        }\n\n        async function bubbleSort(arr) {\n            let n = arr.length;\n\n            for (let i = 0; i < n - 1; i++) {\n                for (let j = 0; j < n - i - 1; j++) {\n                    createArray(arr);  // Visualize the current state\n                    await new Promise(resolve => setTimeout(resolve, 100)); // Wait for a moment\n                    if (arr[j] > arr[j + 1]) {\n                        // Swap elements\n                        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n                    }\n                }\n            }\n            createArray(arr);  // Final state\n        }\n\n        function startBubbleSort() {\n            const input = document.getElementById('inputArray').value;\n            const arr = input.split(',').map(Number);\n            createArray(arr);\n            bubbleSort(arr);\n        }\n    </script>\n</body>\n</html>\n```",
      "refusal": null,
      "annotations": []
    },
    "messages": [
      {
        "role": "system",
        "content": "Generate a single HTML file with JavaScript demonstrating the user-given concept. Only respond in a single HTML file."
      },
      {
        "role": "user",
        "content": "bubble sort"
      }
    ],
    "evaluation": {
      "score": null,
      "notes": ""
    },
    "tags": [
      "test"
    ]
  }
]