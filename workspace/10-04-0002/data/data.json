[
  {
    "id": "425d8520-a131-11f0-b536-b37548ee3df9",
    "timestamp": "2025-10-04T14:48:58.739Z",
    "model": "gpt-4o-mini",
    "status": "success",
    "question": "bubble sort",
    "answer": {
      "role": "assistant",
      "content": "```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Bubble Sort Visualization</title>\n    <style>\n        body {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            font-family: Arial, sans-serif;\n        }\n        .bar {\n            display: inline-block;\n            width: 30px;\n            margin: 2px;\n            background-color: teal;\n            transition: height 0.3s;\n        }\n        #arrayContainer {\n            margin-bottom: 20px;\n        }\n        #controls {\n            margin-top: 20px;\n        }\n    </style>\n</head>\n<body>\n\n    <h1>Bubble Sort Visualization</h1>\n    <div id=\"arrayContainer\"></div>\n    <div id=\"controls\">\n        <button onclick=\"startSort()\">Start Bubble Sort</button>\n    </div>\n\n    <script>\n        const array = [50, 20, 15, 40, 10, 30, 25, 5, 35, 45];\n        const arrayContainer = document.getElementById('arrayContainer');\n\n        function drawArray(arr) {\n            arrayContainer.innerHTML = '';\n            arr.forEach(value => {\n                const bar = document.createElement('div');\n                bar.style.height = value * 5 + 'px'; // Scale for visualization\n                bar.className = 'bar';\n                arrayContainer.appendChild(bar);\n            });\n        }\n\n        async function bubbleSort(arr) {\n            const bars = document.getElementsByClassName('bar');\n            for (let i = 0; i < arr.length - 1; i++) {\n                for (let j = 0; j < arr.length - i - 1; j++) {\n                    if (arr[j] > arr[j + 1]) {\n                        // Swap elements\n                        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n                        drawArray(arr);\n                        // Visual swap delay\n                        await new Promise(resolve => setTimeout(resolve, 500));\n                    }\n                }\n            }\n        }\n\n        function startSort() {\n            const arrCopy = [...array];\n            bubbleSort(arrCopy);\n        }\n\n        drawArray(array);\n    </script>\n</body>\n</html>\n```",
      "refusal": null,
      "annotations": []
    },
    "messages": [
      {
        "role": "system",
        "content": "Generate a single HTML file with JavaScript demonstrating the user-given concept. Only respond in a single HTML file."
      },
      {
        "role": "user",
        "content": "bubble sort"
      }
    ],
    "evaluation": {
      "score": null,
      "notes": ""
    }
  }
]